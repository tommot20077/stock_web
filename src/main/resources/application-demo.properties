#\u914D\u7F6E\u6587\u4EF6\u76F8\u95DC\u8AAA\u660E\uFF0C\u82E5\u6709\u5099\u8A3B\u9810\u8A2D\u503C\u5247\u8A72\u9805\u53EF\u4EE5\u514D\u586B

# MySQL\u76F8\u95DC\u9023\u7DDA\u8A2D\u5B9A
# MySQL\u9023\u7DDA\u4F4D\u7F6E
spring.datasource.url=jdbc:mysql://localhost:3306
# MySQL\u4F7F\u7528\u8005\u540D\u7A31
spring.datasource.username=your_mysql_username
# MySQL\u5BC6\u78BC
spring.datasource.password=your_mysql_password
# MySQL\u9A45\u52D5\u7A0B\u5F0F(\u6709\u9810\u8A2D\u503C)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Redis\u76F8\u95DC\u9023\u7DDA\u8A2D\u5B9A
# Redis\u9023\u7DDA\u4F4D\u7F6E
spring.data.redis.host=localhost
# Redis\u9023\u7DDA\u5BC6\u78BC
spring.data.redis.password=your_redis_password

# Mail\u76F8\u95DC\u8A2D\u5B9A
# Mail\u4F3A\u670D\u5668\u4F4D\u7F6E
spring.mail.host=smtp.office365.com
# Mail\u4F3A\u670D\u5668Port
spring.mail.port=587
# Mail\u4F7F\u7528\u8005\u540D\u7A31
spring.mail.username=your_sender_email
# Mail\u4F7F\u7528\u8005\u5BC6\u78BC
spring.mail.password=your_sender_email_password
# \u662F\u5426\u958B\u555Fsmtp\u6B0A\u9650
spring.mail.properties.mail.smtp.auth=true
# \u662F\u5426\u958B\u555Fstarttls\u52A0\u5BC6\u9023\u7DDA\u8A2D\u5B9A
spring.mail.properties.mail.smtp.starttls.enable=true
# \u5BC4\u4EF6\u8005\u7684\u4FE1\u7BB1\u540D\u7A31
mail.sender.name=sender@example.com

# InfluxDB\u76F8\u95DC\u9023\u7DDA\u8A2D\u5B9A
# InfluxDB\u9023\u7DDA\u4F4D\u7F6E
db.influxdb.url=your_influxdb_url
# InfluxDB\u4F7F\u7528\u8005\u4EE4\u724C\uFF0C\u9700\u8981\u6709\u5BEB\u5165\u6B0A\u9650
db.influxdb.token=your_influxdb_token
# InfluxDB\u7D44\u7E54\u540D\u7A31
db.influxdb.org=your_influxdb_org
# InfluxDB\u8CC7\u6599\u5EAB\u9023\u7DDA\u8D85\u6642\u6642\u9593(\u79D2)(\u6709\u9810\u8A2D\u503C:60)
db.influxdb.connect_timeout=10
# InfluxDB\u8CC7\u6599\u5EAB\u8B80\u5BEB\u8D85\u6642\u6642\u9593(\u79D2)(\u6709\u9810\u8A2D\u503C:30)
db.influxdb.read_write_timeout=30
# InfluxDB\u8CC7\u6599\u5EAB\u6700\u5927\u5408\u4F75\u8CC7\u6599\u5132\u5B58\u7684\u767C\u9001\u6578\u91CF(\u6709\u9810\u8A2D\u503C:100)
db.influxdb.max_send_num=100


# InfluxDB\u8CC7\u6599\u5EAB\u540D\u7A31
# \u53F0\u7063\u80A1\u7968\u8CC7\u6599\u5EAB
db.influxdb.bucket.stock_tw=your_influxdb_bucket
# \u53F0\u7063\u80A1\u7968\u6B77\u53F2\u8CC7\u6599\u5EAB
db.influxdb.bucket.stock_tw_history=your_influxdb_bucket
# \u8CA8\u5E63\u8CC7\u6599\u5EAB
db.influxdb.bucket.currency=your_influxdb_bucket
# \u7528\u6236\u8CA1\u7522\u8CC7\u6599\u5EAB
db.influxdb.bucket.property_summary=your_influxdb_bucket
# \u52A0\u5BC6\u8CA8\u5E63\u8CC7\u6599\u5EAB
db.influxdb.bucket.crypto=your_influxdb_bucket
# \u52A0\u5BC6\u8CA8\u5E63\u6B77\u53F2\u8CC7\u6599\u5EAB
db.influxdb.bucket.crypto_history=your_influxdb_bucket

# \u8CC7\u7522\u76F8\u95DC\u8A2D\u5B9A
# \u52A0\u5BC6\u8CA8\u5E63\u6B77\u53F2\u8CC7\u6599\u53D6\u5F97\u6642\u9593\u983B\u7387(\u6709\u9810\u8A2D\u503C:1d)
# \u53EF\u90781s\u30011m\u30013m\u30015m\u300115m\u300130m\u30011h\u30012h\u30014h\u30016h\u30018h\u300112h\u30011d
db.influxdb.bucket.crypto_history.detail=1h
# \u865B\u64EC\u8CA8\u5E63\u6B77\u53F2\u8CC7\u6599\u53D6\u5F97\u6642\u9593\u958B\u59CB\u9EDE(\u6709\u9810\u8A2D\u503C:20180101)
db.influxdb.bucket.crypto_history.dateline=20180101
# \u53F0\u7063\u80A1\u7968\u6B77\u53F2\u8CC7\u6599\u53D6\u5F97\u6642\u9593\u958B\u59CB\u9EDE(\u6709\u9810\u8A2D\u503C:20110101)
db.influxdb.bucket.stock_tw_history.dateline=20110101
# \u52A0\u5BC6\u8CA8\u5E63\u5373\u6642\u8CC7\u6599\u8CC7\u6599\u67E5\u8A62\u5929\u6578(\u6709\u9810\u8A2D\u503C:14)
db.influxdb.bucket.crypto_current.remain_day=14
# \u53F0\u7063\u80A1\u7968\u5373\u6642\u8CC7\u6599\u8CC7\u6599\u67E5\u8A62\u5929\u6578(\u6709\u9810\u8A2D\u503C:365)
db.influxdb.bucket.stock_tw_current.remain_day=365
# \u8CA8\u5E63\u8ACB\u6C42\u7DB2\u5740(\u4E0D\u5EFA\u8B70\u66F4\u6539)(\u6709\u9810\u8A2D\u503C:https://tw.rter.info/capi.php)
currency.api.url=https://tw.rter.info/capi.php
# finmind\u6240\u63D0\u4F9B\u7684 token
stock_tw.finmind.token=your_finmind_token
# \u662F\u5426\u958B\u555F\u81EA\u52D5\u66F4\u65B0\u53F0\u7063\u80A1\u7968\u8CC7\u6599(\u6709\u9810\u8A2D\u503C:false)(\u7576common.kafka.enable\u70BAtrue\u6642\uFF0C\u6B64\u8A2D\u5B9A\u7121\u6548)
stock_tw.enable_auto_start=false
# \u662F\u5426\u958B\u555F\u81EA\u52D5\u66F4\u65B0\u52A0\u5BC6\u8CA8\u5E63\u8CC7\u6599(\u6709\u9810\u8A2D\u503C:false)(\u7576common.kafka.enable\u70BAtrue\u6642\uFF0C\u6B64\u8A2D\u5B9A\u7121\u6548)
crypto.enable_auto_start=false
# \u590F\u666E\u6BD4\u7387\u8A08\u7B97\u57FA\u6E96\u570B\u5BB6(\u6709\u9810\u8A2D\u503C:us)(\u4E0D\u5EFA\u8B70\u66F4\u6539)
asset.sharp_ratio.country=us
# \u590F\u666E\u6BD4\u7387\u6708\u8A08\u7B97\u57FA\u6E96\u6642\u9593(\u6709\u9810\u8A2D\u503C:1-month)
asset.sharp_ratio.month_base=1-month
# \u590F\u666E\u6BD4\u7387\u5E74\u8A08\u7B97\u57FA\u6E96\u6642\u9593(\u6709\u9810\u8A2D\u503C:1-year)
asset.sharp_ratio.year_base=1-year


# \u5171\u901A\u8A2D\u5B9A
# \u6700\u5927\u91CD\u8A66\u6B21\u6578(\u6709\u9810\u8A2D\u503C:3)
common.max_retryTimes=3
# \u5168\u57DF\u57F7\u884C\u7DD2\u6578\u91CF(\u6709\u9810\u8A2D\u503C:6)
common.global_thread_limit=12
# \u4E0B\u8F09\u6A94\u6848\u8DEF\u5F91(\u6709\u9810\u8A2D\u503C:./)
common.download.path=./
# \u5168\u57DF\u5206\u9801\u5927\u5C0F(\u6709\u9810\u8A2D\u503C:100)
common.global_page_size=100
# \u6BCF\u5C0F\u6642\u7528\u6236\u6700\u5927\u8ACB\u6C42\u767C\u9001\u4FE1\u9650\u5236(\u6709\u9810\u8A2D\u503C:3)
common.send_mail_times=3

# \u9A57\u8B49\u76F8\u95DC\u8A2D\u5B9A
# JWT\u52A0\u5BC6\u91D1\u9470(\u9700\u8981\u9577\u5EA6\u5927\u65BC128)
security.jwt.secret=your_jwt_secret
# JWT\u904E\u671F\u6642\u9593(\u5206\u9418)(\u6709\u9810\u8A2D\u503C:120)
security.jwt.expiration=120
# \u90F5\u4EF6\u9A57\u8B49\u7DB2\u5740(\u6709\u9810\u8A2D\u503C:http://localhost:8080)
security.email.receive.url=your_email_receive_url
# \u9A57\u8B49\u78BC\u904E\u671F\u6642\u9593(\u5206\u9418)(\u6709\u9810\u8A2D\u503C:10)
security.email.expiration=10

# \u65B0\u805E\u76F8\u95DC\u8A2D\u5B9A
# \u65B0\u805EAPI\u91D1\u9470
news.api.token=news_api_token
# \u65B0\u805EAPI\u53D6\u5F97\u65B0\u805E\u985E\u5225(\u6709\u9810\u8A2D\u503C:business)
news.index.category=business
# \u65B0\u805EAPI\u53D6\u5F97\u65B0\u805E\u570B\u5BB6(\u6709\u9810\u8A2D\u503C:tw)
news.prefer.country=tw
# \u65B0\u805EAPI\u53D6\u5F97\u65B0\u805E\u8A9E\u8A00(\u6709\u9810\u8A2D\u503C:zh)
news.prefer.language=zh
# \u65B0\u805EAPI\u8ACB\u6C42\u7DB2\u5740(\u4E0D\u5EFA\u8B70\u66F4\u6539)(\u6709\u9810\u8A2D\u503C:https://newsapi.org/v2/)
news.api.url=https://newsapi.org/v2/
# \u65B0\u805E\u5728\u8CC7\u6599\u5EAB\u4E2D\u4FDD\u7559\u5929\u6578(\u6709\u9810\u8A2D\u503C:30)(\u82E5\u4E0D\u9700\u8981\u522A\u9664\u5247\u8A2D\u5B9A\u70BA0)
news.remain.days=30
# \u65B0\u805E\u662F\u5426\u81EA\u52D5\u66F4\u65B0(\u6709\u9810\u8A2D\u503C:false)
news.autoupdate.currency=false
# \u865B\u64EC\u8CA8\u5E63\u65B0\u805E\u662F\u5426\u81EA\u52D5\u66F4\u65B0(\u6709\u9810\u8A2D\u503C:true)
news.autoupdate.crypto=true
# \u53F0\u80A1\u65B0\u805E\u662F\u5426\u81EA\u52D5\u66F4\u65B0(\u6709\u9810\u8A2D\u503C:true)
news.autoupdate.stock_tw=true

# Kafka\u76F8\u95DC\u8A2D\u5B9A
# Kafka\u4F3A\u670D\u5668\u4F4D\u7F6E
spring.kafka.bootstrap-servers= your_kafka_ip:9092
# Kafka\u6D88\u8CBB\u8005\u504F\u79FB\u91CF\u8A2D\u5B9A(\u6709\u9810\u8A2D\u503C:earliest)
spring.kafka.consumer.auto-offset-reset=earliest
# \u662F\u5426\u958B\u555FKafka\u512A\u5316\u50B3\u8F38(\u6709\u9810\u8A2D\u503C:false)
common.kafka.enable= false

# Spring Boot\u76F8\u95DC\u8A2D\u5B9A
# \u8CC7\u6599\u5EAB\u521D\u59CB\u5316\u8A2D\u5B9A(validate:\u9A57\u8B49,update:\u66F4\u65B0,create:\u5EFA\u7ACB,none:\u4E0D\u505A\u4EFB\u4F55\u4E8B)
spring.jpa.hibernate.ddl-auto=validate
# \u662F\u5426\u986F\u793ASQL\u8A9E\u53E5
spring.jpa.show-sql=false
# \u8CC7\u6599\u5EAB\u7684\u65B9\u8A00\u8A2D\u5B9A
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# \u958B\u555F\u7DE9\u5B58
spring.thymeleaf.cache=true
# \u524D\u7AEF\u6A21\u677F\u6A94\u6848\u5F8C\u7DB4
spring.thymeleaf.suffix=.html
# \u524D\u7AEF\u6A21\u677F\u6A94\u6848\u4F4D\u7F6E
spring.thymeleaf.prefix=classpath:/templates/
# \u95DC\u9589\u81EA\u52D5\u914D\u7F6E
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# \u65E5\u8A8C\u76F8\u95DC\u8A2D\u5B9A
# \u65E5\u8A8C\u6A94\u6848\u540D\u7A31
logging.file.name=logs/spring-boot-logger.log
# \u65E5\u8A8C\u6A94\u6848\u65E5\u671F\u683C\u5F0F
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss
# \u4E00\u822CSpring\u65E5\u8A8C\u7D1A\u5225
logging.level.org.springframework=info
# \u904B\u884C\u72C0\u614B\u65E5\u8A8C\u7D1A\u5225
logging.level.xyz.dowob.stockweb=info
# \u65E5\u8A8C\u540D\u7A31\u683C\u5F0F
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
# \u65E5\u8A8C\u6A94\u6848\u5927\u5C0F\u9650\u5236
logging.logback.rollingpolicy.max-file-size=10MB

# \u7576\u524D\u555F\u52D5\u7684\u8A2D\u5B9A\u6A94\u6848
spring.profiles.active=demo
# \u8A2D\u7F6Esession\u904E\u671F\u6642\u9593
server.servlet.session.timeout=3h


